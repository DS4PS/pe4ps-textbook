plot( x13, y13, pch=19, col=org.id, cex=2,
ylim=c(20,60), xlim=c(1,30),
bty="n", axes=F,
xlab="Hours of Private Tutoring", ylab="Math Scores",
line=1.5, cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Simpson's Paradox", line=1, cex.main=2 )
###
par( mfrow=c(3,1), mar=c(5.1, 4.1, 4.1, 15) )
plot( x11, y11, pch=19, col=gray(0.5,0.5), cex=3,
ylim=c(20,70), xlim=c(1,25),
bty="n", axes=F,
xlab="Program Impact Over-Stated", ylab="",
line=1.5, cex.lab=1.5, col.lab="gray50", cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Matthew Effect", line=1, cex.main=2 )
abline( m11.ols, lwd=2 )
for(i in 1:3){ abline( lm(y11[id==i]~x11[id==i]), lty=3, lwd=3, col="darkgray" ) }
mtext( " Pooled Model", side=4, outer=F, at=m11.ols$fitted.values[30]+5, cex=1.5, las=2 )
b <- m11.fe$coefficients
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[3]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[4]+2, cex=1, las=2 )
plot( x12, y12, pch=19, col=gray(0.5,0.5), cex=3,
ylim=c(20,70), xlim=c(1,25),
bty="n", axes=F,
xlab="Program Impact Over-Stated", ylab="",
line=1.5, cex.lab=1.5, col.lab="gray50", cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Artificial Program Impact", line=1, cex.main=2 )
abline( m12.ols, lwd=2 )
for(i in 1:3){ abline( lm(y12[id==i]~x12[id==i]), lty=3, lwd=3, col="darkgray" ) }
mtext( " Pooled Model", side=4, outer=F, at=m12.ols$fitted.values[30]+5, cex=1.5, las=2 )
b <- m12.fe$coefficients
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[3]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[4]+2, cex=1, las=2 )
plot( x13, y13, pch=19, col=gray(0.5,0.5), cex=3,
ylim=c(20,70), xlim=c(1,25),
bty="n", axes=F,
xlab="Impact has Wrong Sign", ylab="",
line=1.5, cex.lab=1.5, col.lab="gray50", cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Simpson's Paradox", line=1, cex.main=2 )
abline( m13.ols, lwd=2 )
for(i in 1:3){ abline( lm(y13[id==i]~x13[id==i]), lty=3, lwd=3, col="darkgray" ) }
mtext( " Pooled Model", side=4, outer=F, at=m13.ols$fitted.values[30]-3, cex=1.5, las=2 )
b <- m13.fe$coefficients
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[3]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[4]+2, cex=1, las=2 )
y = c(4.4, 6.8, 9.2, 0.54, 1.9, 3.26, -6.92, -5.495, -4.07)
x = c(2, 4, 6, 2.3, 4, 5.7, 3, 4.5, 6)
g = c("a", "a", "a", "b", "b", "b", "c", "c", "c")
t = c(1,2,3,1,2,3,1,2,3)
data = as.data.frame(cbind(x,y,t))
data = as.data.frame(cbind(data, g))
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x, y, bty="n",
ylim = c(-8,10), xlim = c(0,8),
lwd = 5, col = as.factor(data$g),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+1, "C t1")
text(data$x[8], data$y[8]+1, "C t2")
text(data$x[9], data$y[9]+1, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x, y, bty="n", pch=19, cex=1.5,
ylim = c(-8,10), xlim = c(0,8),
col = as.factor(data$g),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+1, "C t1")
text(data$x[8], data$y[8]+1, "C t2")
text(data$x[9], data$y[9]+1, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x, y, bty="n", pch=19, cex=2,
ylim = c(-8,10), xlim = c(0,8),
col = as.factor(data$g),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+1, "C t1")
text(data$x[8], data$y[8]+1, "C t2")
text(data$x[9], data$y[9]+1, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x, y, bty="n", pch=19, cex=3,
ylim = c(-8,10), xlim = c(0,8),
col = as.factor(data$g),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+1, "C t1")
text(data$x[8], data$y[8]+1, "C t2")
text(data$x[9], data$y[9]+1, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x[data$t ==1], y[data$t==1],
ylim = c(-8,10), xlim = c(0,8),
col = as.factor(data$g), lwd = 5,
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
abline(y[data$t == 1] ~ x[data$t == 1], col = "red")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[7], data$y[7]+1, "C t1")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x[data$t ==1], y[data$t==1], pch=19, cex=3,
ylim = c(-8,10), xlim = c(0,5),
col = as.factor(data$g), lwd = 5,
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
abline(y[data$t == 1] ~ x[data$t == 1], col = "red")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[7], data$y[7]+1, "C t1")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x[data$t ==1], y[data$t==1], pch=19, cex=3,
ylim = c(-8,10), xlim = c(1,4),
col = as.factor(data$g), lwd = 5,
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
abline(y[data$t == 1] ~ x[data$t == 1], col = "red")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[7], data$y[7]+1, "C t1")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot( x[data$t ==1], y[data$t==1], pch=19, cex=3, bty="n",
ylim = c(-8,10), xlim = c(1,4),
col = as.factor(data$g), lwd = 5,
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
abline(y[data$t == 1] ~ x[data$t == 1], col = "red")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[7], data$y[7]+1, "C t1")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot(x, y, ylim = c(-8,10), xlim = c(0,8), lwd = 5, col = as.factor(data$g), ylab = "Economic growth (%)", xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+2, "C t1")
text(data$x[8], data$y[8]+2, "C t2")
text(data$x[9], data$y[9]+2, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot(x, y, pch=19, cex=3, col = factor(data$g),
ylim = c(-8,10), xlim = c(0,8),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+2, "C t1")
text(data$x[8], data$y[8]+2, "C t2")
text(data$x[9], data$y[9]+2, "C t3")
palette( c( "steelblue", "darkred", "darkgreen"  ) )
plot(x, y, pch=19, cex=3, bty="n",
col = factor(data$g),
ylim = c(-8,10), xlim = c(0,8),
ylab = "Economic growth (%)",
xlab = "International aid ($M)")
text(data$x[1], data$y[1]+1, "A t1")
text(data$x[2], data$y[2]+1, "A t2")
text(data$x[3], data$y[3]+1, "A t3")
text(data$x[4], data$y[4]+1, "B t1")
text(data$x[5], data$y[5]+1, "B t2")
text(data$x[6], data$y[6]+1, "B t3")
text(data$x[7], data$y[7]+2, "C t1")
text(data$x[8], data$y[8]+2, "C t2")
text(data$x[9], data$y[9]+2, "C t3")
par( mfrow=c(1,2), mar=c(5.1, 4.1, 4.1, 12) )
plot( x1, y1, pch=19, col=gray(0.5,0.5), cex=3,
ylim=c(20,70), xlim=c(0,25),
bty="n", axes=F,
xlab="UNBIASED + EFFICIENT", ylab="",
line=1.5, cex.lab=1.5, col.lab="gray20", cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Data with No Groups", line=1, cex.main=2 )
abline( m1, lwd=2 )
b <- m1$coefficients
mtext( "  Pooled OLS Model", side=4, outer=F, at=b[1]+25*b[2]+3, cex=1.5, las=2 )
plot( x3, y3, pch=19, col=gray(0.5,0.5), cex=3,
ylim=c(20,70), xlim=c(1,25),
bty="n", axes=F,
xlab="BIASED + INEFFICIENT", ylab="",
line=1.5, cex.lab=1.5, col.lab="gray20", cex.lab=1.5 )
axis( side = 1, labels = FALSE )
axis( side = 2, labels = FALSE )
title( main="Data With Groups", line=1, cex.main=2 )
abline( m3.ols, lwd=2 )
for(i in 1:3){ abline( lm(y3[id==i]~x3[id==i]), lty=3, lwd=3, col="darkgray" ) }
mtext( " Pooled OLS Model", side=4, outer=F, at=m3.ols$fitted.values[30]+5, cex=1.5, las=2 )
b <- m3.fe$coefficients
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[3]+2, cex=1, las=2 )
mtext( "  FE Slope", side=4, outer=F, at=b[1]+25*b[2]+b[4]+2, cex=1, las=2 )
plot( dat$taxes, dat$accidents )
plot( data$taxes, data$accidents )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width = 10)
URL <- "https://raw.githubusercontent.com/DS4PS/pe4ps-textbook/master/labs/DATA/beer-tax-fixed-effects.csv"
data <- read.csv( URL, stringsAsFactors=F )
head( data ) %>% pander()
library( stargazer )
library( pander )
library( dplyr )
URL <- "https://raw.githubusercontent.com/DS4PS/pe4ps-textbook/master/labs/DATA/beer-tax-fixed-effects.csv"
data <- read.csv( URL, stringsAsFactors=F )
head( data ) %>% pander()
plot( data$taxes, data$accidents )
summary( dat$taxes )
summary( data$taxes )
data$taxes <- data$taxes + 500
summary( data$taxes )
data$taxes <- data$taxes / 1000
summary( data$taxes )
plot( data$taxes, data$accidents )
getwd()
write.csv( data$taxes, "beer-tax.csv", row.names=F )
write.csv( data, "beer-tax.csv", row.names=F )
head( data )
write.csv( data, "beer-tax.csv", row.names=F )
knitr::opts_chunk$set( echo=TRUE, message=F, warning=F, eval=T )
data( state )
head( state.x77 ) %>% pander()
stats <- as.data.frame( state.x77 )
names( stats )
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'HS Grad', 'Frost' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
# helper functions for pairs
panel.cor <- function(x, y, digits=2, prefix="", cex.cor )
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
# r <- abs(cor(x, y))
r <- round( cor(x, y), 2 )
txt <- paste( prefix, r, sep="" )
# txt <- format(c(r, 0.123456789), digits=digits)[1]
# txt <- paste( prefix, txt, sep="" )
if(missing(cex.cor)) cex <- 4 # 0.5/strwidth(txt)
test <- cor.test(x,y)
# borrowed from printCoefmat
Signif <- symnum(test$p.value, corr = FALSE, na = FALSE,
cutpoints = c(0, 0.001, 0.01, 0.05, 0.1, 1),
symbols = c("***", "**", "*", ".", " "))
text( 0.5, 0.5, txt, cex = 0.6*cex )
text( 0.7, 0.8, Signif, cex=cex, col=2 )
}
panel.smooth <- function( x, y, col=gray(0.7,0.4), bg=NA, pch=16,
cex=2, col.smooth="red", span=2/3, iter=3, ...)
{
points(x, y, pch = pch, col = col, bg = bg, cex = cex)
ok <- is.finite(x) & is.finite(y)
if (any(ok))
lines( stats::lowess(x[ok], y[ok], f = span, iter = iter),
col = col.smooth, lwd=2, ...)
}
panel.cor2 <- function(x, y, digits=2, prefix="" )
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- round( abs( cor(x, y)), 2 )
txt <- paste( prefix, r, sep="" )
text( 0.5, 0.5, txt, cex = 2 )
}
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'HS Grad', 'Frost' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
psych::alpha( df, check.keys=TRUE )$total$raw_alpha
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'HS Grad' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
psych::alpha( df, check.keys=TRUE )$total$raw_alpha
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'Income' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
psych::alpha( df, check.keys=TRUE )$total$raw_alpha
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'Illiteracy' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
psych::alpha( df, check.keys=TRUE )$total$raw_alpha
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'Illiteracy' )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
psych::alpha( df, check.keys=TRUE )$total$raw_alpha
summary( df ) %>% pander()
df2 <- scale( df ) %>% as.data.frame()
pairs( df2, lower.panel=panel.smooth, upper.panel=panel.cor )
summary( df2 ) %>% pander()
x <- df$Murder
x.min <- min(x)
x.max <- max(x)
# convert to ratio in 0 to 1 scale
p <- ( x - x.min ) / ( x.max - x.min )
# convert to 0 to 100 scale
x.rescaled <- p * 100
summary( x.rescaled )
library( scales )
rescale( x, to = c(0,100) )  %>% summary()
rescale( df, to=(1,100) )
rescale( df, to=c(1,100) )
par( mfrow=c(1,2) )
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
pairs( df2, lower.panel=panel.smooth, upper.panel=panel.cor )
fix( pairs )
names( df )
x1 <- rescale( df$`Life Exp`, to = c(0,100) )
x2 <- rescale( df$Murder, to = c(0,100) )
x3 <- rescale( df$Illiteracy, to = c(0,100) )
y = x1 + x2 + x3
summary( y )
x1 <- rescale( df$`Life Exp`, to = c(0,100) )
x2 <- rescale( df$Murder, to = c(0,100) )
x3 <- rescale( df$Illiteracy, to = c(0,100) )
y = x1 + x2 + x3
summary( y )
df$index <- y
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
x1 <- rescale( df$`Life Exp`, to = c(0,100) )
x2 <- rescale( - df$Murder, to = c(0,100) )
x3 <- rescale( - df$Illiteracy, to = c(0,100) )
y = x1 + x2 + x3
summary( y )
df$index <- y
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
# flip murder en illiteracy so more is better
x1 <- df$`Life Exp`
x2 <- - df$Murder
x3 <- - df$Illiteracy
x1 <- rescale( x1, to = c(0,100) )
x2 <- rescale( x2, to = c(0,100) )
x3 <- rescale( x3, to = c(0,100) )
y = x1 + x2 + x3
summary( y )
df$index <- y
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
# flip murder en illiteracy so more is better
x1 <- df$`Life Exp`
x2 <- - df$Murder
x3 <- - df$Illiteracy
x1 <- rescale( x1, to = c(0,100) )
x2 <- rescale( x2, to = c(0,100) )
x3 <- rescale( x3, to = c(0,100) )
y = x1 + x2 + x3
summary( y )
df$qual.of.life <- y
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
scale( df$Murder )
scale( df$Murder ) %>% class()
df2 <- scale( df ) %>% as.data.frame()
# make sure all items point in the same direction
x1 <-   df2$`Life Exp`
x2 <- - df2$Murder
x3 <- - df2$Illiteracy
y = x1 + x2 + x3
summary( y )
df2$qual.of.life <- y
pairs( df, lower.panel=panel.smooth, upper.panel=panel.cor )
df3 <- scale( df ) %>% as.data.frame()
# make sure all items point in the same direction
x1 <-   df3$`Life Exp`
x2 <- - df3$Murder
x3 <- - df3$Illiteracy
y = x1 + x2 + x3
summary( y )
df3$qual.of.life <- y
pairs( df3, lower.panel=panel.smooth, upper.panel=panel.cor )
df <- dplyr::select( stats, 'Life Exp', 'Murder', 'Illiteracy' )
df3 <- scale( df ) %>% as.data.frame()
# make sure all items point in the same direction
x1 <-   df3$`Life Exp`
x2 <- - df3$Murder
x3 <- - df3$Illiteracy
y = x1 + x2 + x3
summary( y )
df3$qual.of.life <- y
pairs( df3, lower.panel=panel.smooth, upper.panel=panel.cor )
hist( y )
hist( x1 )
hist( x1, col="gray30", border="white" )
par( mfrow=c(2,2) )
hist( x1, col="gray30", border="white" )
hist( x2, col="gray30", border="white" )
hist( x3, col="gray30", border="white" )
hist( y, col="gray30", border="white" )
par( mfrow=c(2,2) )
hist( x1, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x2, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x3, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( y, col="gray30", border="white" )
ggplot( gather( df, cols, value), aes(x = value)) +
geom_histogram( binwidth = 5 ) + facet_grid(.~cols)
library( dplyr )   # data wrangling
library( xtable )  # nice tables
library( pander )  # nice tables
library( psych )   # calculate instrument reliability (alpha)
library( ggplot2 ) # graphics
library( tidyr )   # wrangling
ggplot( gather( df, cols, value), aes(x = value)) +
geom_histogram( binwidth = 5 ) + facet_grid(.~cols)
df2 <- scale( df ) %>% as.data.frame()
ggplot( gather( df2, cols, value), aes(x = value)) +
geom_histogram( binwidth = 1 ) + facet_grid(.~cols)
ggplot( gather( df, cols, value), aes(x = value)) +
geom_histogram( binwidth = 5 ) + facet_grid(.~cols)
df2 <- scale( df ) %>% as.data.frame()
ggplot( gather( df2, cols, value), aes(x = value)) +
geom_histogram( binwidth = 1 ) + facet_grid(.~cols)
ggplot( gather( df, cols, value), aes(x = value)) +
geom_histogram( binwidth = 5 ) + facet_grid(.~cols)
df2 <- scale( df ) %>% as.data.frame()
ggplot( gather( df2, cols, value), aes(x = value)) +
geom_histogram( binwidth = 1 ) + facet_grid(.~cols)
x1 <- df$`Life Exp`
summary( x1 )
x1 <- df$`Life Exp`   # range of 67 to 73
x1 <- rescale( x1, to = c(0,100) )
x1 <- df$`Life Exp`   # range of 67 to 73
x1.scaled <- rescale( x1, to=c(0,100) )
x1
x1.scaled <- scales::rescale( x1, to=c(0,100) )
hist( x1, col="gray30", border="white", xlim=c(0,100) )
hist( x1.scaled, col="gray30", border="white", xlim=c(0,100) )
hist( x1.scaled, col="gray30", breaks=25, border="white", xlim=c(0,100) )
hist( x1.scaled, col="gray30", breaks=15, border="white", xlim=c(0,100) )
hist( x1.scaled, col="gray30", breaks=10, border="white", xlim=c(0,100) )
x1 <- c( x1, 150 )
x1.scaled <- scales::rescale( x1, to=c(0,100) )
hist( x1.scaled, col="gray30", breaks=10, border="white", xlim=c(0,100) )
hist( x1.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
par( mfrow=c(2,2) )
hist( x1, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x2, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x3, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( y, col="gray30", border="white" )
x <- df$`Life Exp`   # range of 67 to 73
x.scaled <- scales::rescale( x, to=c(0,100) )
hist( x.scaled, col="gray30", breaks=10, border="white", xlim=c(0,100) )
# add an outlier
x <- c( x, 150 )
x1.scaled <- scales::rescale( x, to=c(0,100) )
hist( x.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
x <- c( x, 150 )
x1.scaled <- scales::rescale( x, to=c(0,100) )
hist( x.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
x <- c( x, 150 )
x.scaled <- scales::rescale( x, to=c(0,100) )
hist( x.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
df3 <- scale( df ) %>% as.data.frame()
# make sure all items point in the same direction
x1 <-   df3$`Life Exp`
x2 <- - df3$Murder
x3 <- - df3$Illiteracy
y = x1 + x2 + x3
summary( y )
df3$qual.of.life <- y
pairs( df3, lower.panel=panel.smooth, upper.panel=panel.cor )
par( mfrow=c(2,2) )
hist( x1, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x2, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( x3, col="gray30", border="white", xlim=c(-3.5,3.5) )
hist( y, col="gray30", border="white" )
# top-coding outliers
# any values above 75 recoded as 75
x[ x > 75 ] <- 75
x.scaled <- scales::rescale( x, to=c(0,100) )
hist( x.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
hist( x.scaled, col="gray30", breaks=10, border="white", xlim=c(0,100) )
hist( x.scaled, col="gray30", breaks=50, border="white", xlim=c(0,100) )
install.packages( "AER" )
install.packages( "wooldridge" )
knitr::opts_chunk$set(echo = TRUE, message=F, warning=F, fig.width=10 )
set.seed( 123 )
# Variable definitions for model  y ~ x1 + x2 + x3
x2 <- rnorm(1000, 50000, 10000)
x3 <- rnorm(1000, 35000, 10000) #Omitted variable
z <- rnorm(1000, 15000, 20000)
x1 <- 2*z - 7*x3 + 100*rnorm(1000) # the policy variable
y <- 25 + 23*x2 - 2*x1 + 14*x3 + 100*rnorm(1000)
dat <- data.frame( y, x1, x2, x3, z )
# head( dat ) %>% pander()
write.csv( dat, "iv-reg-example.csv", row.names=F )
URL <- "https://raw.githubusercontent.com/DS4PS/pe4ps-textbook/master/lectures/data/iv-reg-example.csv"
dat <- read.csv( URL, stringsAsFactors=F )
URL <- "https://ds4ps.org/cpp-525-spr-2020/lectures/data/iv-reg-example.csv"
dat <- read.csv( URL, stringsAsFactors=F )
